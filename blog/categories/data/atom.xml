<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: data | You'll know Her - by Her Blog -]]></title>
  <link href="http://NatalieBlack.github.io/blog/categories/data/atom.xml" rel="self"/>
  <link href="http://NatalieBlack.github.io/"/>
  <updated>2015-08-18T15:44:44-04:00</updated>
  <id>http://NatalieBlack.github.io/</id>
  <author>
    <name><![CDATA[Natalie Black]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Processing Sketches]]></title>
    <link href="http://NatalieBlack.github.io/blog/2014/04/23/processing-sketches/"/>
    <updated>2014-04-23T20:11:43-04:00</updated>
    <id>http://NatalieBlack.github.io/blog/2014/04/23/processing-sketches</id>
    <content type="html"><![CDATA[<script type="text/javascript" src="/javascripts/processing.min.js"></script>


<script type="text/javascript" src="/javascripts/util.js"></script>


<script type="text/javascript" src="/javascripts/libs/jquery.min.js"></script>


<script>
$(document).ready(function() {
    function start_or_stop(i){
      st = $("#" + i).attr("status");
      sketch = Processing.getInstanceById(i);
      c = $("#" + i)
      if(st == "on"){
          c.attr("status", "off");
          sketch.noLoop();
          $("#" + i + "_link").text("show sketch");
      } else {
          c.attr("status", "on");
          sketch.loop();
          $("#" + i + "_link").text("hide sketch");
      }
    }

    function toggle_start_stop(i) {
        $("#" + i).toggle();
        start_or_stop(i);
    }

    function setup(tag){
      $("#" + tag).hide();
      $("#" + tag + "_link").click(function() {
        toggle_start_stop(tag);
      });
    }

    setup("alpha");
    setup("pressure");
    setup("pressure2");
    setup("pressure3");
    setup("cast");
    setup("scramble");

});
</script>


<p>I have wanted to do something with <a href="http://www.processing.org/">Processing</a> ever since I learned of its existence.</p>

<!--more-->


<p>From the Processing website:</p>

<blockquote><p>Initially created to serve as a software sketchbook and to teach computer programming fundamentals within a visual context</p></blockquote>

<p>The idea of a software sketchbook, or an &ldquo;electronic sketchbook&rdquo; as <a href="http://en.wikipedia.org/wiki/Processing_%28programming_language%29">Wikipedia</a> puts it, is particularly enticing to me.  My first interest in learning to control computers stemmed from the potential I saw in them to be used as artistic implements.  My impression was (and still is) that there is a lot of unexplored territory in the intersection between computers and art.  I suspected this might be because of the limited overlap between people with technical knowledge and those with artistic inclinations.  Artistic intention definitely preceded technical ability in my case, but somehow once I started to learn about programming and the web I became distracted by new goals like creating web apps and solving Project Euler problems.  It&rsquo;s interesting how common applications of technology are inadvertently learned alongside technologies themselves.  My education taught me not only how to write HTML, but also that websites for poker or real estate listing are standard uses for it.  I learned that C++ is good for games development and Perl is good for CGI scripts and LISP is good for AIs, and I wanted to try making all of those suggested things because they are also fun and interesting.  I think that any of these tools could be used to make art, but what I like about Processing is that it volunteers to be used for that purpose.  Having that intention built into the programming language&rsquo;s environment helps keep me in the right mindset if nothing else.</p>

<p>A friend and I were recently talking about programming as the process of constantly making and correcting mistakes and the consistent feeling of failure that haunts you as a consequence.  So far my experience making doodles and sketches in Processing has been a refreshing departure from that kind of programming.  Although some mistakes I made along the way felt like failures &ndash; like when my code wouldn&rsquo;t run at all &ndash; often when I did unintentionally coded something that wasn&rsquo;t my intention it felt more like a discovery than a failure.  I might write a loop around one thing when I meant to write it around another, but the result would be interesting and lead me down a path that I wouldn&rsquo;t have followed if it hadn&rsquo;t been for my inaccuracy.  The programming environment played a role not entirely unlike that of water in watercolour painting, removing a degree of control and introducing a level of unpredictability that was seredipitous as often as it was frustrating.</p>

<p>All of these doodles were based on <a href="https://www.processing.org/examples/pointillism.html">this pointilism example</a> from the Processing website.  The idea behind them (besides simply trying out Processing) was to incorporate a &ldquo;natural&rdquo; level of visual variation that falls somewhere between the (pseudo) random and strictly deterministic patterns that are most easily generated by computers.  To achieve more &ldquo;natural&rdquo; patterns I incorporated data sets from the natural or human world.</p>

<p>You might label these &ldquo;data-driven doodles&rdquo;.  I googled &ldquo;data-driven art&rdquo; and the <a href="http://variable.io/">results</a> <a href="http://www.fastcodesign.com/1662578/16-astounding-experiments-in-data-driven-art-slideshow">seemed</a> to be consistent with what I was thinking of &ndash; visual works that are generated from data sets but which prioritize aesthetics over communication of data (the google search also turned up <a href="http://www.furtherfield.org/features/reviews/data-driven-artists-and-their-critics">this super interesting article</a> about a different interpretation of the phrase &ldquo;data-driven art&rdquo;).</p>

<p>In this first sketch, the colours of the dots (which are of uniform size and randomly scattered about the canvas) are derived from the <a href="http://pressurenet.io">pressureNet</a> data set that I wrote about in my last post.  I chose a blue as the base colour for the dots and used the atmospheric pressure reading from each dot&rsquo;s corresponding data point to determine the amount of green to add to the dot&rsquo;s colour.</p>

<p><a href="#" id="pressure_link">show sketch</a></p>

<p><canvas id="pressure" status="off" width="640" height="100" style="border:1px solid #000000;" data-processing-sources="/sketches/purplepressure.pde"> </canvas></p>

<p>The second sketch is generated the same way as the first except the sizes of the dots are also randomized.</p>

<p><a href="#" id="pressure2_link">show sketch</a></p>

<p><canvas id="pressure2" status="off" width="640" height="100" style="border:1px solid #000000;" data-processing-sources="/sketches/randomsizepressurecolour.pde"> </canvas></p>

<p>The third sketch randomizes the amount of green added to each (again, initially blue) dot and uses its corresponding atmospheric pressure reading to determine the size of the dot.</p>

<p><a href="#" id="pressure3_link">show sketch</a></p>

<p><canvas id="pressure3" status="off" width="640" height="100" style="border:1px solid #000000;" data-processing-sources="/sketches/pressuresize.pde"> </canvas></p>

<p>The next sketch also uses random placement, uniform size, and a base colour of blue for the dots.  The data set this sketch uses is the <a href="http://www.gutenberg.org/files/1342/1342-h/1342-h.htm">text of Pride and Prejudice</a>.  Each dot corresponds to a character (as in letter, number, or punctionation mark &ndash; not a person in the story) from the text, and the ASCII code of that character determines the amount of green added to the dot&rsquo;s colour.</p>

<p><a href="#" id="alpha_link">show sketch</a></p>

<p><canvas id="alpha" status="off" width="640" height="100" style="border:1px solid #000000;" data-processing-sources="/sketches/alphabetcolours.pde"> </canvas></p>

<p>The next sketch is a bit more complicated.  Again, the placement of the dots is random and the size is uniform.  The data behind this one is my 2013 <a href="http://nanowrimo.org/">NaNoWriMo</a> novel, or specifically the occurences of characters (this time referring to the people in the story) within it.  I made a spreadsheet of all my main cast members and their aliases, nicknames, etc and assigned each person a base colour.  Each dot in the sketch corresponds to the occurence of one of my cast members' names and is coloured accordingly.  The colour gets diluted in accordance to how far down the list of the character&rsquo;s aliases the given name appears.  For example, if I was a character assigned the colour purple and my list of aliases was [&ldquo;Natalie&rdquo;, &ldquo;Nat&rdquo;, &ldquo;brain_box&rdquo;], then each occurence of &ldquo;Natalie&rdquo; in the text would create a vibrant purple dot, each occurence of &ldquo;brain_box&rdquo; would lead to a more dull purple dot, and each occurrence of &ldquo;Nat&rdquo; would create a dot with a purple colour halfway in between the vibrant and the dull purples.</p>

<p><a href="#" id="cast_link">show sketch</a></p>

<p><canvas id="cast" status="off" width="640" height="100" style="border:1px solid #000000;" data-processing-sources="/sketches/characters.pde"> </canvas></p>

<p>The last sketch doesn&rsquo;t incorporate a data set like the others, but rather an existing <a href="http://NatalieBlack.github.io/images/helaliedoodleII.png" target="blank" id="imglink">image</a> (a collaborative doodle made by me and my friend <a href="https://twitter.com/thatsillyhelen">Helen</a>).</p>

<p>The size and location of the dots are randomly generated, but the colours of the dots are taken from random pixels in that image.</p>

<p><a href="#" id="scramble_link">show sketch</a></p>

<p><canvas id="scramble" status="off" width="640" height="100" style="border:1px solid #000000;" data-processing-sources="/sketches/scramblenomouse.pde"> </canvas></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[An Attempt at Science]]></title>
    <link href="http://NatalieBlack.github.io/blog/2014/03/23/an-attempt-at-science/"/>
    <updated>2014-03-23T17:21:08-04:00</updated>
    <id>http://NatalieBlack.github.io/blog/2014/03/23/an-attempt-at-science</id>
    <content type="html"><![CDATA[<p>Last Saturday I spent the afternoon messing around with some open data sets using IPython notebook and pandas.</p>

<!--more-->


<p>The first data set came from the city of Toronto&rsquo;s open data <a href="http://www1.toronto.ca/wps/portal/contentonly?vgnextoid=9e56e03bb8d1e310VgnVCM10000071d60f89RCRD">portal</a>, and contained records of all the official heat warnings released by the city since 2001.  The second data set contained atmospheric pressure readings from smart phones throughout the city of Toronto.  I got this data through the developer API for <a href="http://pressurenet.io/">pressureNET</a>, a Toronto-based startup run by my friend <a href="http://jacobsheehy.com/">Jacob</a> and <a href="http://philippejones.com/">some</a> <a href="http://jaredkerim.com/">other</a> cool guys.  Knowing that atmospheric pressure and temperature are somehow related, I formed the hypothesis that there would be a correlation between the pressure readings and the occurrence of heat warnings.</p>

<p>This <a href="http://nbviewer.ipython.org/gist/anonymous/137e0bd2a813decb1bfc">IPython notebook</a> shows how I went about testing my hypothesis.</p>
]]></content>
  </entry>
  
</feed>
